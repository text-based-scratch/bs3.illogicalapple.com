{"mappings":"AAAA,aAMA,IAAIA,EAGAC,OAAU,WACZ,IAAIC,EAAkBF,EAAEG,OAAOC,OAAOF,gBAElCG,EAAO,CAAC,OAAQ,MAAO,KAAM,KAE7BC,EAAQ,CAAC,QAAS,KAAM,MAAO,KAEnC,SAASC,EAAYC,GACnBC,SAASC,OAAOC,OAAO,GAAGC,MAAM,KAAKC,SAAQ,SAASC,GACpD,IAAIC,EAAQD,EAAEF,MAAM,KAChBG,EAAMC,OAAS,GAGnBR,EAAQO,EAAM,GAAIA,EAAM,IAAM,G,IAIlC,IAAIE,EAAgB,GAChBC,EAAY,KA4GhB,GA1GAX,GAAY,SAASY,EAAKC,GACxB,SAASC,EAAgBC,EAAMF,GAE7B,IAAKlB,EAAgBqB,eAAeD,GAClC,MAAM,IAAIE,MAAM,mBAAqBF,GAIvC,IACIG,SADevB,EAAgBoB,GAInC,GAAqB,WAAjBG,IACFL,GAASA,EACLM,OAAOC,MAAMP,IACfQ,QAAQC,KAAK,aAAeP,EAAO,wCAHvC,CAQA,GAAqB,YAAjBG,EAEF,GADAL,EAAQA,EAAMU,cACVzB,EAAK0B,QAAQX,IAAS,EACxBA,GAAQ,MACH,MAAId,EAAMyB,QAAQX,IAAS,GAIhC,YADAQ,QAAQC,KAAK,aAAeP,EAAO,4CAFnCF,GAAQ,C,CAOZH,EAAcK,GAAQF,C,EAGxB,SAASY,EAAcV,EAAMF,GAC3BC,EAAgBC,EAAMF,GAAS,O,CAWjC,OAAQD,GAEN,IAAK,MACHE,EAAgB,MAAOD,GACvB,MACF,IAAK,WACHC,EAAgB,WAAYD,GAC5B,MACF,IAAK,QACHY,EAAc,QAASZ,GACvB,MACF,IAAK,iBACHY,EAAc,iBAAkBZ,GAChC,MACF,IAAK,UACHY,EAAc,gBAAiBZ,GAC/B,MACF,IAAK,SACHY,EAAc,eAAgBZ,GAC9B,MACF,IAAK,SA5BP,SAAuBE,EAAMF,EAAOa,GAC9BA,EAAOF,QAAQX,IAAS,EAC1BC,EAAgBC,EAAMF,GAEtBQ,QAAQC,KAAKT,EAAO,gBAAiBa,EAAOC,KAAK,M,CAyBjDC,CAAc,iBAAkBf,EAAO,CAAC,MAAO,KAAM,iBACrD,MACF,IAAK,QACHY,EAAc,YAAaZ,GAC3B,MACF,IAAK,QACW,WAAVA,IAAoBA,EAAQ,iEAChCY,EAAc,cAAeZ,GAC7B,MACF,IAAK,SACHY,EAAc,mBAAoBZ,GAClC,MAEF,IAAK,KAEHF,EAAYE,EACZ,MAEF,IAAK,QACHpB,EAAEoC,OAAOC,UAAW,EACpBrC,EAAEsC,KAAKC,cAAcC,mBAAoB,EACzC,MACF,IAAK,QACHxC,EAAEoC,OAAOK,OAAQ,EACjB,MACF,IAAK,QACHzC,EAAEoC,OAAOM,qBAAsB,EAC/B,MACF,IAAK,MACH1C,EAAEoC,OAAOO,2BAA4B,EACrC,MACF,IAAK,OACH3C,EAAEsC,KAAKC,cAAcC,mBAAoB,E,IAM7B,OAAdtB,EAAoB,CACtB,IAAI0B,EAAOnC,SAASmC,KAAKjC,OAAO,GAC5B,QAAQkC,KAAKD,KACf1B,EAAY0B,E,CAIhB,MAAO,CACLrC,YAAaA,EACbU,cAAeA,EACfC,UAAWA,E,CAxID","sources":["Documents/GitHub/bs3.illogicalapple.com/src/forkphorus-common.js"],"sourcesContent":["'use strict';\n\n// Common code shared between index.html, app.html, embed.html etc.\n// This should be loaded after phosphorus.dist.js\n\n/** @type {any} */\nvar P;\n\n// @ts-ignore\nvar Common = (function() {\n  var DEFAULT_OPTIONS = P.player.Player.DEFAULT_OPTIONS;\n  // \"truthy\" values\n  var TRUE = ['true', 'yes', 'on', '1'];\n  // \"falsey\" values\n  var FALSE = ['false', 'no', 'off', '0'];\n\n  function parseSearch(handler) {\n    location.search.substr(1).split('&').forEach(function(p) {\n      var parts = p.split('=');\n      if (parts.length < 1) {\n        return;\n      }\n      handler(parts[0], parts[1] || '');\n    });\n  }\n\n  var playerOptions = {};\n  var projectId = null;\n\n  parseSearch(function(key, value) {\n    function setPlayerOption(name, value) {\n      // Check that this option exists\n      if (!DEFAULT_OPTIONS.hasOwnProperty(name)) {\n        throw new Error('Unknown option: ' + name);\n      }\n\n      // Get the default value and type\n      var defaultValue = DEFAULT_OPTIONS[name];\n      var expectedType = typeof defaultValue;\n\n      // Convert the input value to the correct type\n      if (expectedType === 'number') {\n        value = +value;\n        if (Number.isNaN(value)) {\n          console.warn('Value for ' + name + ' is an invalid number, skipping.');\n          return;\n        }\n      }\n\n      if (expectedType === 'boolean') {\n        value = value.toLowerCase();\n        if (TRUE.indexOf(value) > -1) {\n          value = true;\n        } else if (FALSE.indexOf(value) > -1) {\n          value = false;\n        } else {\n          console.warn('Value for ' + name + ' is an invalid boolean(-like), skipping.');\n          return;\n        }\n      }\n\n      playerOptions[name] = value;\n    }\n\n    function setPlayerFlag(name, value) {\n      setPlayerOption(name, value || 'true');\n    }\n\n    function setPlayerEnum(name, value, values) {\n      if (values.indexOf(value) > -1) {\n        setPlayerOption(name, value);\n      } else {\n        console.warn(value, 'is not one of', values.join(', '));\n      }\n    }\n\n    switch (key) {\n      // Player options\n      case 'fps':\n        setPlayerOption('fps', value);\n        break;\n      case 'username':\n        setPlayerOption('username', value);\n        break;\n      case 'turbo':\n        setPlayerFlag('turbo', value);\n        break;\n      case 'imageSmoothing':\n        setPlayerFlag('imageSmoothing', value);\n        break;\n      case 'fencing':\n        setPlayerFlag('spriteFencing', value);\n        break;\n      case 'limits':\n        setPlayerFlag('removeLimits', value);\n        break;\n      case 'cloud':\n        setPlayerEnum('cloudVariables', value, ['off', 'ws', 'localStorage']);\n        break;\n      case 'chost':\n        setPlayerFlag('cloudHost', value);\n        break;\n      case 'phost':\n        if (value === 'legacy') value = 'https://projects.scratch.mit.edu/internalapi/project/$id/get/';\n        setPlayerFlag('projectHost', value);\n        break;\n      case 'chhost':\n        setPlayerFlag('cloudHistoryHost', value);\n        break;\n      // Project ID\n      case 'id':\n        // projectId is also read from location.hash if not found here.\n        projectId = value;\n        break;\n      // Feature flags\n      case 'webgl':\n        P.config.useWebGL = true;\n        P.core.VectorCostume.DISABLE_RASTERIZE = false; // temporary\n        break;\n      case 'debug':\n        P.config.debug = true;\n        break;\n      case 'video':\n        P.config.supportVideoSensing = true;\n        break;\n      case 'opt':\n        P.config.experimentalOptimizations = true;\n        break;\n      case 'svgr':\n        P.core.VectorCostume.DISABLE_RASTERIZE = true;\n        break;\n    }\n  });\n\n  // Check hash for project ID if not specified in search string\n  if (projectId === null) {\n    var hash = location.hash.substr(1);\n    if (/^\\d+$/.test(hash)) {\n      projectId = hash;\n    }\n  }\n\n  return {\n    parseSearch: parseSearch,\n    playerOptions: playerOptions,\n    projectId: projectId,\n  };\n}());\n"],"names":["P","Common","DEFAULT_OPTIONS","player","Player","TRUE","FALSE","parseSearch","handler","location","search","substr","split","forEach","p","parts","length","playerOptions","projectId","key","value","setPlayerOption","name","hasOwnProperty","Error","expectedType","Number","isNaN","console","warn","toLowerCase","indexOf","setPlayerFlag","values","join","setPlayerEnum","config","useWebGL","core","VectorCostume","DISABLE_RASTERIZE","debug","supportVideoSensing","experimentalOptimizations","hash","test"],"version":3,"file":"index.a6f22a32.js.map"}